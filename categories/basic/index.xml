<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Basic on MD ABDUL KADIR</title><link>https://makt96.github.io/personal-portfolio/categories/basic/</link><description>Recent content in Basic on MD ABDUL KADIR</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 16 May 2022 08:06:25 +0600</lastBuildDate><atom:link href="https://makt96.github.io/personal-portfolio/categories/basic/index.xml" rel="self" type="application/rss+xml"/><item><title>Directing traffic with Elastic Load Balancing</title><link>https://makt96.github.io/personal-portfolio/posts/aws/aws-ec2/ec3/</link><pubDate>Mon, 16 May 2022 08:06:25 +0600</pubDate><guid>https://makt96.github.io/personal-portfolio/posts/aws/aws-ec2/ec3/</guid><description>Elastic Load Balancing Elastic Load Balancing is the AWS service that automatically distributes incoming application traffic across multiple resources, such as Amazon EC2 instances.
A load balancer acts as a single point of contact for all incoming web traffic to your Auto Scaling group. This means that as you add or remove Amazon EC2 instances in response to the amount of incoming traffic, these requests route to the load balancer first.</description></item><item><title>Monolithic applications and microservices</title><link>https://makt96.github.io/personal-portfolio/posts/aws/aws-ec2/ec4/</link><pubDate>Mon, 16 May 2022 08:06:25 +0600</pubDate><guid>https://makt96.github.io/personal-portfolio/posts/aws/aws-ec2/ec4/</guid><description>Introduction Applications are made of multiple components. The components communicate with each other to transmit data, fulfill requests, and keep the application running.
Suppose that you have an application with tightly coupled components. These components might include databases, servers, the user interface, business logic, and so on. This type of architecture can be considered a monolithic application.
In this approach to application architecture, if a single component fails, other components fail, and possibly the entire application fails.</description></item><item><title>Scaling Amazon EC2</title><link>https://makt96.github.io/personal-portfolio/posts/aws/aws-ec2/ec2/</link><pubDate>Mon, 16 May 2022 08:06:25 +0600</pubDate><guid>https://makt96.github.io/personal-portfolio/posts/aws/aws-ec2/ec2/</guid><description>Scalability Scalability involves beginning with only the resources you need and designing your architecture to automatically respond to changing demand by scaling out or in. As a result, you pay for only the resources you use. You don’t have to worry about a lack of computing capacity to meet your customers’ needs.
If you wanted the scaling process to happen automatically, which AWS service would you use?</description></item><item><title>Amazon Elastic Compute Cloud (Amazon EC2)</title><link>https://makt96.github.io/personal-portfolio/posts/aws/aws-ec2/ec1/</link><pubDate>Sun, 15 May 2022 08:06:25 +0600</pubDate><guid>https://makt96.github.io/personal-portfolio/posts/aws/aws-ec2/ec1/</guid><description>Amazon Elastic Compute Cloud (Amazon EC2) provides secure, resizable compute capacity in the cloud as Amazon EC2 instances.
Imagine you are responsible for the architecture of your company&amp;rsquo;s resources and need to support new websites. With traditional on-premises resources, you have to do the following:
Spend money upfront to purchase hardware. Wait for the servers to be delivered to you. Install the servers in your physical data center.</description></item><item><title>AWS Cloud Basic</title><link>https://makt96.github.io/personal-portfolio/posts/aws/aws-cloud/</link><pubDate>Sun, 15 May 2022 08:06:25 +0600</pubDate><guid>https://makt96.github.io/personal-portfolio/posts/aws/aws-cloud/</guid><description>What is a client-server model? You just learned more about AWS and how almost all of modern computing uses a basic client-server model. Let’s recap what a client-server model is.
In computing, a client can be a web browser or desktop application that a person interacts with to make requests to computer servers. A server can be services such as Amazon Elastic Compute Cloud (Amazon EC2), a type of virtual server.</description></item></channel></rss>